-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.cliente_segmentos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cliente_id uuid NOT NULL,
  segmento_id uuid NOT NULL,
  fecha_asignacion timestamp without time zone DEFAULT now(),
  automatico boolean DEFAULT true,
  CONSTRAINT cliente_segmentos_pkey PRIMARY KEY (id),
  CONSTRAINT cliente_segmentos_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id),
  CONSTRAINT cliente_segmentos_segmento_id_fkey FOREIGN KEY (segmento_id) REFERENCES public.segmentos_cliente(id)
);
CREATE TABLE public.clientes (
  nombre text NOT NULL,
  telefono text,
  email text,
  direccion text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp without time zone DEFAULT now(),
  fecha_nacimiento date,
  genero text CHECK (genero = ANY (ARRAY['masculino'::text, 'femenino'::text, 'otro'::text])),
  profesion text,
  observaciones text,
  activo boolean DEFAULT true,
  fecha_primera_compra timestamp without time zone,
  fecha_ultima_compra timestamp without time zone,
  total_compras numeric DEFAULT 0,
  frecuencia_compra numeric DEFAULT 0,
  ticket_promedio numeric DEFAULT 0,
  categoria_cliente text DEFAULT 'regular'::text CHECK (categoria_cliente = ANY (ARRAY['nuevo'::text, 'regular'::text, 'frecuente'::text, 'vip'::text, 'inactivo'::text])),
  descuento_especial numeric DEFAULT 0,
  limite_credito numeric DEFAULT 0,
  dias_credito integer DEFAULT 0,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT clientes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.compra_detalle (
  compra_id uuid,
  producto_id uuid,
  cantidad integer,
  precio_unitario numeric,
  subtotal numeric,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  CONSTRAINT compra_detalle_pkey PRIMARY KEY (id),
  CONSTRAINT compra_detalle_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id),
  CONSTRAINT compra_detalle_compra_id_fkey FOREIGN KEY (compra_id) REFERENCES public.compras(id)
);
CREATE TABLE public.compras (
  proveedor_id uuid,
  usuario_id uuid,
  total numeric,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT compras_pkey PRIMARY KEY (id),
  CONSTRAINT compras_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id),
  CONSTRAINT compras_proveedor_id_fkey FOREIGN KEY (proveedor_id) REFERENCES public.proveedores(id)
);
CREATE TABLE public.conceptos_flujo (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nombre text NOT NULL UNIQUE,
  tipo text NOT NULL CHECK (tipo = ANY (ARRAY['ingreso'::text, 'egreso'::text])),
  categoria text NOT NULL,
  activo boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT conceptos_flujo_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cotizacion_detalle (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cotizacion_id uuid NOT NULL,
  producto_id uuid,
  descripcion text NOT NULL,
  cantidad integer NOT NULL DEFAULT 1,
  precio_unitario numeric NOT NULL,
  descuento_item numeric DEFAULT 0,
  subtotal numeric NOT NULL,
  observaciones text,
  tiempo_entrega text,
  es_catalogo boolean DEFAULT false,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT cotizacion_detalle_pkey PRIMARY KEY (id),
  CONSTRAINT cotizacion_detalle_cotizacion_id_fkey FOREIGN KEY (cotizacion_id) REFERENCES public.cotizaciones(id),
  CONSTRAINT cotizacion_detalle_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id)
);
CREATE TABLE public.cotizaciones (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  numero_cotizacion text NOT NULL UNIQUE,
  cliente_id uuid NOT NULL,
  usuario_id uuid NOT NULL,
  tipo text NOT NULL CHECK (tipo = ANY (ARRAY['cotizacion'::text, 'catalogo'::text])),
  estado text NOT NULL DEFAULT 'borrador'::text CHECK (estado = ANY (ARRAY['borrador'::text, 'enviada'::text, 'aprobada'::text, 'rechazada'::text, 'vencida'::text, 'convertida'::text])),
  fecha_emision date NOT NULL DEFAULT CURRENT_DATE,
  fecha_vencimiento date NOT NULL,
  subtotal numeric NOT NULL DEFAULT 0,
  descuento numeric DEFAULT 0,
  impuestos numeric DEFAULT 0,
  total numeric NOT NULL DEFAULT 0,
  observaciones text,
  condiciones_pago text,
  tiempo_entrega text,
  validez_oferta integer DEFAULT 30,
  venta_id uuid,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT cotizaciones_pkey PRIMARY KEY (id),
  CONSTRAINT cotizaciones_venta_id_fkey FOREIGN KEY (venta_id) REFERENCES public.ventas(id),
  CONSTRAINT cotizaciones_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id),
  CONSTRAINT cotizaciones_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id)
);
CREATE TABLE public.cuenta_corriente (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cliente_id uuid NOT NULL,
  tipo_movimiento text NOT NULL CHECK (tipo_movimiento = ANY (ARRAY['debito'::text, 'credito'::text])),
  concepto text NOT NULL,
  descripcion text NOT NULL,
  monto numeric NOT NULL,
  saldo_anterior numeric NOT NULL DEFAULT 0,
  saldo_nuevo numeric NOT NULL DEFAULT 0,
  fecha_movimiento timestamp without time zone NOT NULL DEFAULT now(),
  fecha_vencimiento date,
  venta_id uuid,
  pago_id uuid,
  usuario_id uuid NOT NULL,
  observaciones text,
  anulado boolean DEFAULT false,
  fecha_anulacion timestamp without time zone,
  motivo_anulacion text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT cuenta_corriente_pkey PRIMARY KEY (id),
  CONSTRAINT cuenta_corriente_venta_id_fkey FOREIGN KEY (venta_id) REFERENCES public.ventas(id),
  CONSTRAINT cuenta_corriente_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id),
  CONSTRAINT cuenta_corriente_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.flujo_caja (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  concepto_id uuid NOT NULL,
  tipo text NOT NULL CHECK (tipo = ANY (ARRAY['real'::text, 'proyectado'::text])),
  fecha_movimiento date NOT NULL,
  monto numeric NOT NULL,
  descripcion text NOT NULL,
  observaciones text,
  venta_id uuid,
  compra_id uuid,
  pago_id uuid,
  usuario_id uuid NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT flujo_caja_pkey PRIMARY KEY (id),
  CONSTRAINT flujo_caja_venta_id_fkey FOREIGN KEY (venta_id) REFERENCES public.ventas(id),
  CONSTRAINT flujo_caja_concepto_id_fkey FOREIGN KEY (concepto_id) REFERENCES public.conceptos_flujo(id),
  CONSTRAINT flujo_caja_compra_id_fkey FOREIGN KEY (compra_id) REFERENCES public.compras(id),
  CONSTRAINT flujo_caja_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id),
  CONSTRAINT flujo_caja_pago_id_fkey FOREIGN KEY (pago_id) REFERENCES public.pagos(id)
);
CREATE TABLE public.pago_aplicaciones (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  pago_id uuid NOT NULL,
  venta_id uuid NOT NULL,
  monto_aplicado numeric NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT pago_aplicaciones_pkey PRIMARY KEY (id),
  CONSTRAINT pago_aplicaciones_venta_id_fkey FOREIGN KEY (venta_id) REFERENCES public.ventas(id),
  CONSTRAINT pago_aplicaciones_pago_id_fkey FOREIGN KEY (pago_id) REFERENCES public.pagos(id)
);
CREATE TABLE public.pagos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cliente_id uuid NOT NULL,
  numero_recibo text UNIQUE,
  monto_total numeric NOT NULL,
  metodo_pago text NOT NULL CHECK (metodo_pago = ANY (ARRAY['efectivo'::text, 'transferencia'::text, 'cheque'::text, 'tarjeta'::text])),
  fecha_pago date NOT NULL DEFAULT CURRENT_DATE,
  observaciones text,
  usuario_id uuid NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT pagos_pkey PRIMARY KEY (id),
  CONSTRAINT pagos_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id),
  CONSTRAINT pagos_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.productos (
  nombre text NOT NULL,
  tipo text,
  marca text,
  compatible_con text,
  proveedor_id uuid,
  costo numeric,
  margen numeric,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  stock integer DEFAULT 0,
  precio_calculado numeric DEFAULT (costo * ((1)::numeric + margen)),
  created_at timestamp without time zone DEFAULT now(),
  codigo_barras text UNIQUE,
  categoria text,
  subcategoria text,
  descripcion_larga text,
  especificaciones jsonb,
  imagenes jsonb,
  es_catalogo boolean DEFAULT false,
  tiempo_entrega_dias integer DEFAULT 0,
  peso numeric,
  dimensiones jsonb,
  activo boolean DEFAULT true,
  destacado boolean DEFAULT false,
  orden_catalogo integer DEFAULT 0,
  tags ARRAY,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT productos_pkey PRIMARY KEY (id),
  CONSTRAINT productos_proveedor_id_fkey FOREIGN KEY (proveedor_id) REFERENCES public.proveedores(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  nombre text,
  apellido text,
  rol text CHECK (rol = ANY (ARRAY['admin'::text, 'empleado'::text, 'contador'::text])),
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.proveedores (
  nombre text NOT NULL,
  cuit text,
  telefono text,
  email text,
  rubro text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp without time zone DEFAULT now(),
  margen_ganancia numeric DEFAULT 0.30 CHECK (margen_ganancia >= 0::numeric AND margen_ganancia <= 10::numeric),
  direccion text,
  ciudad text,
  provincia text,
  codigo_postal text,
  contacto_principal text,
  cargo_contacto text,
  telefono_alternativo text,
  sitio_web text,
  observaciones text,
  activo boolean DEFAULT true,
  calificacion integer CHECK (calificacion >= 1 AND calificacion <= 5),
  condiciones_pago text,
  tiempo_entrega_promedio integer DEFAULT 0,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT proveedores_pkey PRIMARY KEY (id)
);
CREATE TABLE public.segmentos_cliente (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  nombre text NOT NULL UNIQUE,
  descripcion text,
  criterios jsonb NOT NULL,
  color text DEFAULT '#3B82F6'::text,
  activo boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT segmentos_cliente_pkey PRIMARY KEY (id)
);
CREATE TABLE public.servicio_productos (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  servicio_id uuid NOT NULL,
  producto_id uuid NOT NULL,
  cantidad integer NOT NULL DEFAULT 1,
  precio_unitario numeric NOT NULL,
  subtotal numeric NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT servicio_productos_pkey PRIMARY KEY (id),
  CONSTRAINT servicio_productos_servicio_id_fkey FOREIGN KEY (servicio_id) REFERENCES public.servicios(id),
  CONSTRAINT servicio_productos_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id)
);
CREATE TABLE public.servicios (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  cliente_id uuid NOT NULL,
  vehiculo_id uuid,
  turno_id uuid,
  venta_id uuid,
  tipo_servicio text NOT NULL,
  descripcion text NOT NULL,
  observaciones text,
  tecnico_responsable text,
  fecha_inicio timestamp without time zone NOT NULL,
  fecha_fin timestamp without time zone,
  estado text NOT NULL DEFAULT 'programado'::text CHECK (estado = ANY (ARRAY['programado'::text, 'en_proceso'::text, 'completado'::text, 'cancelado'::text])),
  costo_mano_obra numeric DEFAULT 0,
  tiempo_estimado interval,
  tiempo_real interval,
  kilometraje integer,
  proximo_servicio_km integer,
  proximo_servicio_fecha date,
  garantia_dias integer DEFAULT 0,
  calificacion integer CHECK (calificacion >= 1 AND calificacion <= 5),
  comentario_cliente text,
  imagenes_antes jsonb,
  imagenes_despues jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT servicios_pkey PRIMARY KEY (id),
  CONSTRAINT servicios_venta_id_fkey FOREIGN KEY (venta_id) REFERENCES public.ventas(id),
  CONSTRAINT servicios_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id),
  CONSTRAINT servicios_vehiculo_id_fkey FOREIGN KEY (vehiculo_id) REFERENCES public.vehiculos(id),
  CONSTRAINT servicios_turno_id_fkey FOREIGN KEY (turno_id) REFERENCES public.turnos(id)
);
CREATE TABLE public.turnos (
  cliente_id uuid,
  vehiculo_id uuid,
  fecha timestamp without time zone NOT NULL,
  motivo text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  estado text DEFAULT 'pendiente'::text CHECK (estado = ANY (ARRAY['pendiente'::text, 'confirmado'::text, 'cancelado'::text, 'realizado'::text])),
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT turnos_pkey PRIMARY KEY (id),
  CONSTRAINT turnos_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id),
  CONSTRAINT turnos_vehiculo_id_fkey FOREIGN KEY (vehiculo_id) REFERENCES public.vehiculos(id)
);
CREATE TABLE public.vehiculos (
  cliente_id uuid,
  marca text,
  modelo text,
  patente text,
  año integer,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp without time zone DEFAULT now(),
  numero_motor text,
  numero_chasis text,
  combustible text CHECK (combustible = ANY (ARRAY['nafta'::text, 'diesel'::text, 'gnc'::text, 'electrico'::text, 'hibrido'::text])),
  cilindrada text,
  color text,
  kilometraje_actual integer DEFAULT 0,
  fecha_ultima_revision date,
  observaciones text,
  activo boolean DEFAULT true,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT vehiculos_pkey PRIMARY KEY (id),
  CONSTRAINT vehiculos_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id)
);
CREATE TABLE public.venta_detalle (
  venta_id uuid,
  producto_id uuid,
  cantidad integer,
  precio_unitario numeric,
  subtotal numeric,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  CONSTRAINT venta_detalle_pkey PRIMARY KEY (id),
  CONSTRAINT venta_detalle_venta_id_fkey FOREIGN KEY (venta_id) REFERENCES public.ventas(id),
  CONSTRAINT venta_detalle_producto_id_fkey FOREIGN KEY (producto_id) REFERENCES public.productos(id)
);
CREATE TABLE public.ventas (
  cliente_id uuid,
  usuario_id uuid,
  metodo_pago text CHECK (metodo_pago = ANY (ARRAY['efectivo'::text, 'crédito'::text, 'débito'::text, 'cheque'::text])),
  descuento numeric,
  total numeric,
  plazo_cheque integer,
  cheque_plazo integer CHECK (cheque_plazo IS NULL OR (cheque_plazo = ANY (ARRAY[30, 60, 90]))),
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp without time zone DEFAULT now(),
  numero_factura text UNIQUE,
  tipo_comprobante text DEFAULT 'ticket'::text CHECK (tipo_comprobante = ANY (ARRAY['ticket'::text, 'factura_a'::text, 'factura_b'::text, 'factura_c'::text])),
  condicion_pago text DEFAULT 'contado'::text CHECK (condicion_pago = ANY (ARRAY['contado'::text, 'credito'::text])),
  fecha_vencimiento date,
  observaciones text,
  vendedor_id uuid,
  comision_vendedor numeric DEFAULT 0,
  costo_total numeric DEFAULT 0,
  margen_bruto numeric DEFAULT 0,
  porcentaje_margen numeric DEFAULT 0,
  canal_venta text DEFAULT 'mostrador'::text CHECK (canal_venta = ANY (ARRAY['mostrador'::text, 'telefono'::text, 'whatsapp'::text, 'online'::text])),
  origen_cliente text DEFAULT 'directo'::text CHECK (origen_cliente = ANY (ARRAY['directo'::text, 'referido'::text, 'publicidad'::text, 'web'::text])),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT ventas_pkey PRIMARY KEY (id),
  CONSTRAINT ventas_usuario_id_fkey FOREIGN KEY (usuario_id) REFERENCES public.profiles(id),
  CONSTRAINT ventas_cliente_id_fkey FOREIGN KEY (cliente_id) REFERENCES public.clientes(id),
  CONSTRAINT ventas_vendedor_id_fkey FOREIGN KEY (vendedor_id) REFERENCES public.profiles(id)
);